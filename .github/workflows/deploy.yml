name: Deploy build

on:
  push:
    branches:
      - main
      - staging
    tags:
      - staging-ru
      - staging-zh-cn

  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set sha-short
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV

      - id: lower-repo
        name: Repository to lowercase
        run: |
          echo "repository=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.lower-repo.outputs.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          context: 'git'
          tags: |
            type=sha
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "deployment/Docker/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REACT_APP_PROXY_KEY=${{ secrets.REACT_APP_PROXY_KEY }}
            REACT_APP_MIXPANEL_TOKEN=${{ secrets.REACT_APP_MIXPANEL_TOKEN }}
            REACT_APP_ANALYTICS_ENABLED=${{ secrets.REACT_APP_ANALYTICS_ENABLED }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch new build
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          repository: ${{ vars.DEPLOY_REPO }}
          event-type: 'new-build'
          client-payload: |
            {
              "app_name": "ton-docs",
              "ref_name": "${{ github.ref_name }}",
            }
