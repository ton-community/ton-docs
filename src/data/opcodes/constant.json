[
  {
    "name": "PUSHINT_LONG",
    "alias_of": "",
    "tlb": "#82 l:(## 5) xxx:(int (8 * l + 19))",
    "doc_category": "const_int",
    "doc_opcode": "82lxxx",
    "doc_fift": "[xxx] PUSHINT\n[xxx] INT",
    "doc_stack": "- xxx",
    "doc_gas": 23,
    "doc_description": "Pushes integer `xxx`.\n_Details:_ 5-bit `0 <= l <= 30` determines the length `n=8l+19` of signed big-endian integer `xxx`.\nThe total length of this instruction is `l+4` bytes or `n+13=8l+32` bits."
  },
  {
    "name": "PUSHINT_16",
    "alias_of": "",
    "tlb": "#81 xxxx:int16",
    "doc_category": "const_int",
    "doc_opcode": "81xxxx",
    "doc_fift": "[xxxx] PUSHINT\n[xxxx] INT",
    "doc_stack": "- xxxx",
    "doc_gas": 34,
    "doc_description": "Pushes integer `xxxx`. `-2^15 <= xx < 2^15`."
  },
  {
    "name": "PUSHCONT_SHORT",
    "alias_of": "",
    "tlb": "#9 x:(## 4) ssss:((8 * x) * Bit)",
    "doc_category": "const_data",
    "doc_opcode": "9xccc",
    "doc_fift": "[builder] PUSHCONT\n[builder] CONT",
    "doc_stack": "- c",
    "doc_gas": 18,
    "doc_description": "Pushes a continuation made from `builder`.\n_Details:_ Pushes an `x`-byte continuation for `0 <= x <= 15`."
  },
  {
    "name": "PUSHINT_4",
    "alias_of": "",
    "tlb": "#7 i:uint4",
    "doc_category": "const_int",
    "doc_opcode": "7i",
    "doc_fift": "[x] PUSHINT\n[x] INT",
    "doc_stack": "- x",
    "doc_gas": 18,
    "doc_description": "Pushes integer `x` into the stack. `-5 <= x <= 10`.\nHere `i` equals four lower-order bits of `x` (`i=x mod 16`)."
  },
  {
    "name": "PUSHCONT",
    "alias_of": "",
    "tlb": "#8F_ r:(## 2) xx:(## 7) c:(r * ^Cell) ssss:((8 * xx) * Bit)",
    "doc_category": "const_data",
    "doc_opcode": "8F_rxxcccc",
    "doc_fift": "[builder] PUSHCONT\n[builder] CONT",
    "doc_stack": "- c",
    "doc_gas": 26,
    "doc_description": "Pushes a continuation made from `builder`.\n_Details:_ Pushes the simple ordinary continuation `cccc` made from the first `0 <= r <= 3` references and the first `0 <= xx <= 127` bytes of `cc.code`."
  },
  {
    "name": "PUSHPOW2",
    "alias_of": "",
    "tlb": "#83 xx:uint8",
    "doc_category": "const_int",
    "doc_opcode": "83xx",
    "doc_fift": "[xx+1] PUSHPOW2",
    "doc_stack": "- 2^(xx+1)",
    "doc_gas": 26,
    "doc_description": "(Quietly) pushes `2^(xx+1)` for `0 <= xx <= 255`.\n`2^256` is a `NaN`."
  },
  {
    "name": "PUSHINT_8",
    "alias_of": "",
    "tlb": "#80 xx:int8",
    "doc_category": "const_int",
    "doc_opcode": "80xx",
    "doc_fift": "[xx] PUSHINT\n[xx] INT",
    "doc_stack": "- xx",
    "doc_gas": 26,
    "doc_description": "Pushes integer `xx`. `-128 <= xx <= 127`."
  },
  {
    "name": "PUSHSLICE_LONG",
    "alias_of": "",
    "tlb": "#8D r:(#<= 4) xx:(## 7) c:(r * ^Cell) ssss:((8 * xx + 6) * Bit)",
    "doc_category": "const_data",
    "doc_opcode": "8Drxxsssss",
    "doc_fift": "[slice] PUSHSLICE\n[slice] SLICE",
    "doc_stack": "- s",
    "doc_gas": 28,
    "doc_description": "Pushes the slice `slice` into the stack.\n_Details:_ Pushes the subslice of `cc.code` consisting of `0 <= r <= 4` references and up to `8xx+6` bits of data, with `0 <= xx <= 127`.\nA completion tag is assumed."
  },
  {
    "name": "PUSHPOW2DEC",
    "alias_of": "",
    "tlb": "#84 xx:uint8",
    "doc_category": "const_int",
    "doc_opcode": "84xx",
    "doc_fift": "[xx+1] PUSHPOW2DEC",
    "doc_stack": "- 2^(xx+1)-1",
    "doc_gas": 26,
    "doc_description": "Pushes `2^(xx+1)-1` for `0 <= xx <= 255`."
  },
  {
    "name": "PUSHSLICE",
    "alias_of": "",
    "tlb": "#8B x:(## 4) sss:((8 * x + 4) * Bit)",
    "doc_category": "const_data",
    "doc_opcode": "8Bxsss",
    "doc_fift": "[slice] PUSHSLICE\n[slice] SLICE",
    "doc_stack": "- s",
    "doc_gas": 22,
    "doc_description": "Pushes the slice `slice` into the stack.\n_Details:_ Pushes the (prefix) subslice of `cc.code` consisting of its first `8x+4` bits and no references (i.e., essentially a bitstring), where `0 <= x <= 15`.\nA completion tag is assumed, meaning that all trailing zeroes and the last binary one (if present) are removed from this bitstring.\nIf the original bitstring consists only of zeroes, an empty slice will be pushed."
  },
  {
    "name": "PUSHREFCONT",
    "alias_of": "",
    "tlb": "#8A c:^Cell",
    "doc_category": "const_data",
    "doc_opcode": "8A",
    "doc_fift": "[ref] PUSHREFCONT",
    "doc_stack": "- cont",
    "doc_gas": null,
    "doc_description": "Similar to `PUSHREFSLICE`, but makes a simple ordinary _Continuation_ out of the cell."
  },
  {
    "name": "PUSHREFSLICE",
    "alias_of": "",
    "tlb": "#89 c:^Cell",
    "doc_category": "const_data",
    "doc_opcode": "89",
    "doc_fift": "[ref] PUSHREFSLICE",
    "doc_stack": "- s",
    "doc_gas": null,
    "doc_description": "Similar to `PUSHREF`, but converts the cell into a _Slice_."
  },
  {
    "name": "PUSHREF",
    "alias_of": "",
    "tlb": "#88 c:^Cell",
    "doc_category": "const_data",
    "doc_opcode": "88",
    "doc_fift": "[ref] PUSHREF",
    "doc_stack": "- c",
    "doc_gas": 18,
    "doc_description": "Pushes the reference `ref` into the stack.\n_Details:_ Pushes the first reference of `cc.code` into the stack as a _Cell_ (and removes this reference from the current continuation)."
  },
  {
    "name": "PUSHNAN",
    "alias_of": "",
    "tlb": "#83FF",
    "doc_category": "const_int",
    "doc_opcode": "83FF",
    "doc_fift": "PUSHNAN",
    "doc_stack": "- NaN",
    "doc_gas": 26,
    "doc_description": "Pushes a `NaN`."
  },
  {
    "name": "PUSHSLICE_REFS",
    "alias_of": "",
    "tlb": "#8C r:(## 2) xx:(## 5) c:((r + 1) * ^Cell) ssss:((8 * xx + 1) * Bit)",
    "doc_category": "const_data",
    "doc_opcode": "8Crxxssss",
    "doc_fift": "[slice] PUSHSLICE\n[slice] SLICE",
    "doc_stack": "- s",
    "doc_gas": 25,
    "doc_description": "Pushes the slice `slice` into the stack.\n_Details:_ Pushes the (prefix) subslice of `cc.code` consisting of its first `1 <= r+1 <= 4` references and up to first `8xx+1` bits of data, with `0 <= xx <= 31`.\nA completion tag is also assumed."
  },
  {
    "name": "PUSHNEGPOW2",
    "alias_of": "",
    "tlb": "#85 xx:uint8",
    "doc_category": "const_int",
    "doc_opcode": "85xx",
    "doc_fift": "[xx+1] PUSHNEGPOW2",
    "doc_stack": "- -2^(xx+1)",
    "doc_gas": 26,
    "doc_description": "Pushes `-2^(xx+1)` for `0 <= xx <= 255`."
  }
]