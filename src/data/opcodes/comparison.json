[
  {
    "name": "EQUAL",
    "alias_of": "",
    "tlb": "#BA",
    "doc_category": "compare_int",
    "doc_opcode": "BA",
    "doc_fift": "EQUAL",
    "doc_stack": "x y - x=y",
    "doc_gas": 18,
    "doc_description": "Returns `-1` if `x=y`, `0` otherwise."
  },
  {
    "name": "GEQ",
    "alias_of": "",
    "tlb": "#BE",
    "doc_category": "compare_int",
    "doc_opcode": "BE",
    "doc_fift": "GEQ",
    "doc_stack": "x y - x>=y",
    "doc_gas": 18,
    "doc_description": "Equivalent to `LESS` `NOT`."
  },
  {
    "name": "EQINT",
    "alias_of": "",
    "tlb": "#C0 yy:int8",
    "doc_category": "compare_int",
    "doc_opcode": "C0yy",
    "doc_fift": "[yy] EQINT",
    "doc_stack": "x - x=yy",
    "doc_gas": 26,
    "doc_description": "Returns `-1` if `x=yy`, `0` otherwise.\n`-2^7 <= yy < 2^7`."
  },
  {
    "name": "SDEQ",
    "alias_of": "",
    "tlb": "#C705",
    "doc_category": "compare_other",
    "doc_opcode": "C705",
    "doc_fift": "SDEQ",
    "doc_stack": "s s' - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether the data parts of `s` and `s'` coincide, equivalent to `SDLEXCMP` `ISZERO`."
  },
  {
    "name": "GTINT",
    "alias_of": "",
    "tlb": "#C2 yy:int8",
    "doc_category": "compare_int",
    "doc_opcode": "C2yy",
    "doc_fift": "[yy] GTINT\n[yy+1] GEQINT",
    "doc_stack": "x - x>yy",
    "doc_gas": 26,
    "doc_description": "Returns `-1` if `x>yy`, `0` otherwise.\n`-2^7 <= yy < 2^7`."
  },
  {
    "name": "SEMPTY",
    "alias_of": "",
    "tlb": "#C700",
    "doc_category": "compare_other",
    "doc_opcode": "C700",
    "doc_fift": "SEMPTY",
    "doc_stack": "s - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether a _Slice_ `s` is empty (i.e., contains no bits of data and no cell references)."
  },
  {
    "name": "GREATER",
    "alias_of": "",
    "tlb": "#BC",
    "doc_category": "compare_int",
    "doc_opcode": "BC",
    "doc_fift": "GREATER",
    "doc_stack": "x y - x>y",
    "doc_gas": 18,
    "doc_description": ""
  },
  {
    "name": "LESS",
    "alias_of": "",
    "tlb": "#B9",
    "doc_category": "compare_int",
    "doc_opcode": "B9",
    "doc_fift": "LESS",
    "doc_stack": "x y - x<y",
    "doc_gas": 18,
    "doc_description": "Returns `-1` if `x<y`, `0` otherwise."
  },
  {
    "name": "LESSINT",
    "alias_of": "",
    "tlb": "#C1 yy:int8",
    "doc_category": "compare_int",
    "doc_opcode": "C1yy",
    "doc_fift": "[yy] LESSINT\n[yy-1] LEQINT",
    "doc_stack": "x - x<yy",
    "doc_gas": 26,
    "doc_description": "Returns `-1` if `x<yy`, `0` otherwise.\n`-2^7 <= yy < 2^7`."
  },
  {
    "name": "NEQINT",
    "alias_of": "",
    "tlb": "#C3 yy:int8",
    "doc_category": "compare_int",
    "doc_opcode": "C3yy",
    "doc_fift": "[yy] NEQINT",
    "doc_stack": "x - x!=yy",
    "doc_gas": 26,
    "doc_description": "Returns `-1` if `x!=yy`, `0` otherwise.\n`-2^7 <= yy < 2^7`."
  },
  {
    "name": "LEQ",
    "alias_of": "",
    "tlb": "#BB",
    "doc_category": "compare_int",
    "doc_opcode": "BB",
    "doc_fift": "LEQ",
    "doc_stack": "x y - x<=y",
    "doc_gas": 18,
    "doc_description": ""
  },
  {
    "name": "NEQ",
    "alias_of": "",
    "tlb": "#BD",
    "doc_category": "compare_int",
    "doc_opcode": "BD",
    "doc_fift": "NEQ",
    "doc_stack": "x y - x!=y",
    "doc_gas": 18,
    "doc_description": "Equivalent to `EQUAL` `NOT`."
  },
  {
    "name": "SDEMPTY",
    "alias_of": "",
    "tlb": "#C701",
    "doc_category": "compare_other",
    "doc_opcode": "C701",
    "doc_fift": "SDEMPTY",
    "doc_stack": "s - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether _Slice_ `s` has no bits of data."
  },
  {
    "name": "SREMPTY",
    "alias_of": "",
    "tlb": "#C702",
    "doc_category": "compare_other",
    "doc_opcode": "C702",
    "doc_fift": "SREMPTY",
    "doc_stack": "s - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether _Slice_ `s` has no references."
  },
  {
    "name": "SDPPFXREV",
    "alias_of": "",
    "tlb": "#C70B",
    "doc_category": "compare_other",
    "doc_opcode": "C70B",
    "doc_fift": "SDPPFXREV",
    "doc_stack": "s s' - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether `s'` is a proper prefix of `s`."
  },
  {
    "name": "SDLEXCMP",
    "alias_of": "",
    "tlb": "#C704",
    "doc_category": "compare_other",
    "doc_opcode": "C704",
    "doc_fift": "SDLEXCMP",
    "doc_stack": "s s' - x",
    "doc_gas": 26,
    "doc_description": "Compares the data of `s` lexicographically with the data of `s'`, returning `-1`, 0, or 1 depending on the result."
  },
  {
    "name": "ISNAN",
    "alias_of": "",
    "tlb": "#C4",
    "doc_category": "compare_int",
    "doc_opcode": "C4",
    "doc_fift": "ISNAN",
    "doc_stack": "x - x=NaN",
    "doc_gas": 18,
    "doc_description": "Checks whether `x` is a `NaN`."
  },
  {
    "name": "CMP",
    "alias_of": "",
    "tlb": "#BF",
    "doc_category": "compare_int",
    "doc_opcode": "BF",
    "doc_fift": "CMP",
    "doc_stack": "x y - sgn(x-y)",
    "doc_gas": 18,
    "doc_description": "Computes the sign of `x-y`:\n`-1` if `x<y`, `0` if `x=y`, `1` if `x>y`.\nNo integer overflow can occur here unless `x` or `y` is a `NaN`."
  },
  {
    "name": "SDPFXREV",
    "alias_of": "",
    "tlb": "#C709",
    "doc_category": "compare_other",
    "doc_opcode": "C709",
    "doc_fift": "SDPFXREV",
    "doc_stack": "s s' - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether `s'` is a prefix of `s`, equivalent to `SWAP` `SDPFX`."
  },
  {
    "name": "SDCNTTRAIL1",
    "alias_of": "",
    "tlb": "#C713",
    "doc_category": "compare_other",
    "doc_opcode": "C713",
    "doc_fift": "SDCNTTRAIL1",
    "doc_stack": "s - n",
    "doc_gas": 26,
    "doc_description": "Returns the number of trailing ones in `s`."
  },
  {
    "name": "SGN",
    "alias_of": "",
    "tlb": "#B8",
    "doc_category": "compare_int",
    "doc_opcode": "B8",
    "doc_fift": "SGN",
    "doc_stack": "x - sgn(x)",
    "doc_gas": 18,
    "doc_description": "Computes the sign of an integer `x`:\n`-1` if `x<0`, `0` if `x=0`, `1` if `x>0`."
  },
  {
    "name": "SDFIRST",
    "alias_of": "",
    "tlb": "#C703",
    "doc_category": "compare_other",
    "doc_opcode": "C703",
    "doc_fift": "SDFIRST",
    "doc_stack": "s - ?",
    "doc_gas": 26,
    "doc_description": "Checks whether the first bit of _Slice_ `s` is a one."
  },
  {
    "name": "SDCNTLEAD0",
    "alias_of": "",
    "tlb": "#C710",
    "doc_category": "compare_other",
    "doc_opcode": "C710",
    "doc_fift": "SDCNTLEAD0",
    "doc_stack": "s - n",
    "doc_gas": 26,
    "doc_description": "Returns the number of leading zeroes in `s`."
  }
]